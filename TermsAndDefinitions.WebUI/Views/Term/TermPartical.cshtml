@model TermsAndDefinitions.WebUI.ViewModels.TermViewModel

<div>
    <hr />
    <h3>@Model.TermName</h3>
    <hr />
    @{
        int count = 1;      
        var firstItem = Model.Definitions.First();
        <p><span class="term">@Model.TermName</span> - @firstItem.Description
            @{
                if (!string.IsNullOrEmpty(firstItem.URL))
                {
                    <sup>[<a href=@firstItem.URL>@(count++)</a>]</sup>
                }
             }
        </p>

                if (Model.Definitions.Count() > 1)
                {
           <hr />
            <h4>Другие определения</h4>
             <ul>
                    @foreach (var item in Model.Definitions.Skip(1))
                    {
                        <li style="list-style-type: none">
                            <p>
                                <span class="term">@Model.TermName</span> — @item.Description
                                @{
                                    if (!string.IsNullOrEmpty(firstItem.URL))
                                    {
                                        <sup>[<a href=@item.URL>@(count++)</a>]</sup>
                                    }
                                }
                            </p>
                        </li>
                                    }
             </ul>
              }
    }
</div>
@if (Model.Projects != null)
{
    if (Model.Projects.Count() > 0)
    {
        <div>
            @{Html.RenderAction("PreviewProjectsPartical", "Project", new { id = Model.Projects });}
        </div>
    }
}
<div>  
   @{
       var URLs = Model.Definitions.Where(x => !string.IsNullOrEmpty(x.URL));
       if (URLs.Count() > 0)
       {
        <hr />
        <h4>Ссылки</h4>
           <ol type="1">
                @{
                    count = 1;
                    foreach (var item in URLs)
                    {
                        <li><a href=@item.URL name="link@(count++)">@item.Name</a></li>
                    }
                  }
           </ol>
       }
    }
</div>



