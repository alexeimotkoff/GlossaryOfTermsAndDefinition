@using TermsAndDefinitions.WebUI.ViewModels;
@model TermsAndDefinitions.WebUI.ViewModels.TermViewModel

<hr />
<h3>@Model.TermName</h3>

<div id="addition" class="row">
    @{
        var addition = new TermAdditionViewModel()
        {
            Addition = Model.Addition,
            IdTerm = Model.IdTerm,
            TermName = Model.TermName,
            IdFundamentalArea = Model.IdFundamentalArea,
            FundamentalArea = Model.FundamentalArea
        };

        Html.RenderPartial("AdditionPartical", addition);
        }
</div>
<hr />

    @{
        int count = 1;
        var definitions = Model.Definitions.OrderByDescending(x => x.Freq);
        var firstItem = definitions.First();

        if (!string.IsNullOrEmpty(firstItem.URL))
        {
            ViewData["LinkCount"] = (count++).ToString();
        }

        string definitionId = "definition" + firstItem.IdDefinition.ToString();

        <div id="@definitionId" class="row">
            @{Html.RenderPartial("DefinitionPartical", firstItem, ViewData); }
        </div>

        <div id="OtherDefinitions">
            @{ 
                var otherDefinitions = definitions.Skip(1);
            }
           
            @{Html.RenderPartial("OtherDefinitionsPartical", otherDefinitions); }
            
        </div>
        if (Request.IsAuthenticated)
        {
            <div class="row">
                <div class="col-sm-6  col-xs-12">                      
                        @Ajax.ActionLink("Добавть другое определение", "AddDefinitionForm",
                       new { id = Model.IdTerm },
                       new AjaxOptions { UpdateTargetId = "newDefinitionForm", HttpMethod = "POST" },
                        new { @class = "btn  btn-sm btn-default" }
                       )
                </div>
            </div>
       }

    }
                <div class="row">

                    @if (Model.Projects != null)
                    {
                        if (Model.Projects.Count() > 0)
                        {
                            Html.RenderAction("PreviewProjectsPartical", "Project", new { project = Model.Projects });

                        }
                    }
                </div>

                <div class="row">
                    @{
                        var URLs = Model.Definitions.Where(x => !string.IsNullOrEmpty(x.URL));
                        if (URLs.Count() > 0)
                        {
                            <hr />
                            <h4>Ссылки</h4>
                            <ol type="1">
                                @{
                                    count = 1;
                                    foreach (var item in URLs)
                                    {
                                        <li><a href=@item.URL name="link@(count++)">@item.URLTitle</a></li>
                                    }
                                }
                            </ol>
                                    }
                    }
                </div>
